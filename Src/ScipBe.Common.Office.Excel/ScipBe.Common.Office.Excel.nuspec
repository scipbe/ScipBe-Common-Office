<?xml version="1.0" encoding="utf-8"?>
<package>
  <metadata>
    <id>ScipBe.Common.Office.Excel</id>
    <version>3.1.1</version>
    <authors>Stefan Cruysberghs</authors>
	<summary>LINQ to Excel. Query Excel worksheets and CSV files.</summary>
    <description>The ExcelProvider loads an Excel worksheet and provides column definitions and row collections. All collections are IEnumerable so you can query them with LINQ. The ExcelProvider supports XLSX (Excel 2007-2019, v12-v16), XLS (Excel 97-2003, v8-v11) but it requires the installation of the Microsoft Access Database Engine 2016 Redistributable.</description>
    <language>en-US</language>
    <projectUrl>https://github.com/scipbe/ScipBe-Common-Office</projectUrl>
	<license type="expression">MIT</license>
	<icon>Images\ScipBe.Common.Office.Excel.png</icon>
	<releaseNotes>
		Version 3.1.1 (January 2025)
		- Switched to Microsoft Access Database Engine 2016 Redistributable for reading Excel XLSX and XLS files
		- Removed the support for reading CSV files. The CSVHelper library is a much beter alternative: https://joshclose.github.io/CsvHelper/
		- Upgraded unit test project to .NET 8.0 in stead of old .NET 4.6
		- Updated LinqPad scripts with examples
	</releaseNotes>
    <tags>scipbe linq office excel ado xlsx xls worksheet</tags>
  </metadata>
	<files>
		<file src="bin\Release\netstandard2.0\ScipBe.Common.Office.Excel.dll" target="lib\netstandard2.0\ScipBe.Common.Office.Excel.dll" />
		<file src="Images\ScipBe.Common.Office.Excel.png" target="Images\ScipBe.Common.Office.Excel.png" />
	</files>
</package>

